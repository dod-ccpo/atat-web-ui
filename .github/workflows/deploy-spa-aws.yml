---
name: Build and Deploy SPA

on:
  push:
    branches:
      - "develop"
      - "feature/add-aws-deploy"

jobs:
  build:
    name: Build SPA
    runs-on: ubuntu-20.04
    steps:
      - name: Configure npm caching
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Checkout code base
        uses: actions/checkout@v2
      - name: Install global dependencies
        run: |
          npm install -g @vue/cli
          npm i -g @vue/cli-service-global
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: atat-web-ui
          path: dist
  deploy:
    name: Deploy SPA to AWS (${{ matrix.region }})
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        include:
          - name: GovCloud
            region: us-gov-west-1
            secret_prefix: AWS_US_GOV
          - name: Commerical
            region: us-east-1
            secret_prefix: AWS
    steps:
      # Ensure that the account ID does not appear in any log messages in the pipeline
      - run: echo ::add-mask::${{ secrets[format('{0}_ACCOUNT_ID', matrix.secret_prefix)] }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[format('{0}_ACCESS_KEY_ID', matrix.secret_prefix)] }}
          aws-secret-access-key: ${{ secrets[format('{0}_SECRET_ACCESS_KEY', matrix.secret_prefix)] }}
          aws-region: ${{ matrix.region }}
      - name: Download site artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: atat-web-ui
      - name: Upload site
        run: |
          aws s3 sync . s3://${{ secrets[format('{0}_BUCKET_NAME', matrix.secret_prefix)] }} --delete --region ${{ matrix.region }}
        working-directory: ${{ steps.download.outputs.download-path }}
