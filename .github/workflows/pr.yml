---
name: Run checks on PRs

on:
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - name: Install project dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
  buildTestScan:
    name: Build, test, and run SonarCloud scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Sonar Scanner requires full history for blame information
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - name: Install project dependencies
        run: npm ci
      - name: Build the project
        run: npm run build
        env:
          testURL: "${{ secrets.VUE_BASE_API_URL }}/test"
          BASE_API_URL: "${{ secrets.VUE_BASE_API_URL }}"
          SNOWUSER: "${{ secrets.VUE_SNOW_USER }}"
          SNOWPASS: ""
      - name: Test the project
        run: npm run test
      - name: Trigger SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Preserve build artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/
          name: atat-web-ui
      - name: Preserve test coverage report
        uses: actions/upload-artifact@v3
        with:
          path: coverage/lcov-report/
          name: lcov-report

  secretScan:
    name: Scan for secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: Install detect-secrets
        run: pip install detect-secrets
      - name: Scan for new (not-yet-allowed) secrets
        run: >-
          git ls-files -z |
          xargs -0 detect-secrets-hook --baseline .secrets.baseline
