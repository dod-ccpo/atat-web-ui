import { bootstrapMockApis,randomNumber} from "../../../helpers";
import common from "../../../selectors/common.sel";
import fd from "../../../selectors/financialDetails.sel";

describe("Test suite: Funding Plan substep: G-Invoicing work flow", () => {


  beforeEach(() => {
    bootstrapMockApis();
    cy.launchATAT();
    cy.clickSideStepper(common.stepFinancialDetailsLink, " Financial Details ");
    //Verify the Substeps are  visible
    cy.textExists(common.subStepFundingPlanText, " Funding Plan ").click();;
    cy.verifyPageHeader("What type of funding request did you use for this acquisition?");    
    cy.selectFundingRequest(fd.fsfRadioBtn, "FS_FORM");    
        
  }); 
  
  it("TC1: Did you use G-Invoicing for your funding request?", () => {    
    const introText = "If you select Yes below, then we will" +
      " verify a few details and sync your funding request with this effort." +
      " Otherwise, you can manually upload forms from your computer. Learn more about G-Invoicing"
    cy.verifyTextMatches(common.introText, introText);
    cy.radioBtn(fd.ginvoiceYesRadioBtn, "YES");
    cy.radioBtn(fd.ginvoiceNoRadioBtn, "NO");
    const giYesLabel = "Yes. My General Terms & Conditions (GT&C) and Order are in G-Invoicing."
    cy.verifyTextMatches(fd.yesLabel, giYesLabel);
    const giNoLabel = "No. I would like to upload my 7600A and 7600B forms."
    cy.verifyTextMatches(fd.noLabel, giNoLabel);
    cy.selectGInvoiceFRequest(fd.ginvoiceYesRadioBtn, "YES");
    const orderNoValue= "O2212-000-000-000000";
    cy.enterTextInTextField(fd.orderNoSearchInput, orderNoValue);
    cy.findElement(fd.orderNoSearchBtn).click()
      .then(() => {
        cy.findElement(fd.orderNosearchAlertSucess).should("exist");
        const alertSuccessMessage = "Good news! We found your order within G-Invoicing" +
          " and synced your funding details with this acquisition."
        cy.textExists(fd.orderNosearchAlertSucess, alertSuccessMessage);
      });
    
    cy.btnClick(common.continueBtn, " Continue ");
    cy.verifyPageHeader(" Are you requesting to incrementally fund this requirement? ");   
    
  });
  
  it("TC2: Validations: G-Invoicing for your funding request screen", () => {
    cy.radioBtn(fd.ginvoiceYesRadioBtn, "YES").focus();
    cy.clickSomethingElse(fd. gInvoiceErrorRadioOption)
      .then(() => {
        cy.checkErrorMessage(fd.gInvoiceErrorRadioOption, "Please select an option");
      });
    cy.selectGInvoiceFRequest(fd.ginvoiceYesRadioBtn, "YES");
    //enter the wrong Orderno.
    const orderNoValue= "ast";
    cy.enterTextInTextField(fd.orderNoSearchInput, orderNoValue);
    cy.findElement(fd.orderNoSearchBtn).click().then(() => {
      const errorText = "Your order number should be 20 or 22 characters" +
      " (including hyphens and periods) and use the format:" +
      " OYYMM-000-000-000000" +
      " OYYMM-000-000-000000.0 (with version number)";
        
      cy.verifyTextMatches(fd.orderNosearchError,errorText);    
      
    });   
    
  });
    
  it("TC3: Asserts: Let’s gather info about your 7600A and 7600B ", () => {
    cy.selectGInvoiceFRequest(fd.ginvoiceNoRadioBtn, "NO");
    cy.btnClick(common.continueBtn, " Continue ");
    cy.verifyPageHeader(" Let’s gather info about your 7600A and 7600B ");
    cy.textExists(fd.gtcNoLabel, " General Terms & Conditions (GT&C) Number ");

    const gNumberTooltipText = "This is a unique 20-character valuegenerated by G-Invoicing." +
      " You can find your GT&C number in the top section of your FS Form 7600A."
    
    cy.hoverToolTip(
      fd.gtcTooltipBtn,
      fd.gtcTooltipText, gNumberTooltipText); 
    
    //Enter the General Number 
    const gNumber="A2212-000-000-000000"
    cy.enterTextInTextField(fd.gtcNoInput, gNumber);
    
    cy.textExists(fd.orderNoLabel, " Order Number ");
    const oNumberTooltipText = "This is a unique 20-character value generated by G-Invoicing." +
      " You can find your order number in the top section of your FS Form 7600B."
    cy.hoverToolTip(
      fd.orderNoTooltipBtn,
      fd.orderNoTooltipText, oNumberTooltipText); 
  
    //Enter the Order Number
    const oNo="O2212-000-000-000000"
    cy.enterTextInTextField(fd.orderNoInput, oNo);
    cy.textExists(fd.uploadTitle, " Upload your 7600A and 7600B ");
    const filepath = "files/dd1155.pdf"
    const filepath1 = "files/Requirements Checklist-DISA.pdf"
    cy.findElement('input[type="file"]').attachFile([filepath,filepath1]);
    cy.findElement(fd.fundingfileupload).click({ force: true });
    cy.findElement(fd.uploadFileName0).contains("dd1155.pdf");
    cy.findElement(fd.uploadFileName1).contains("Requirements Checklist-DISA.pdf");  
    cy.findElement(fd.browserToUploadLink).should("not.be.enabled");
    cy.btnClick(common.continueBtn, " Continue ");
    cy.verifyPageHeader(" Are you requesting to incrementally fund this requirement? ");

  });   

  it("TC4: Validations:  Upload 7600A and 7600B screen", () => {
    cy.selectGInvoiceFRequest(fd.ginvoiceNoRadioBtn, "NO");
    cy.btnClick(common.continueBtn, " Continue ");
    cy.verifyPageHeader(" Let’s gather info about your 7600A and 7600B ");
    //if the General Number field is blank
    cy.verifyRequiredInput(
      fd.gtcNoInput,
      fd.gtcNoError,
      "Please enter your GT&C number."
    ); 

    const gNumber = "A2216" + randomNumber(3)
    //Enter invalid GNumber
    cy.findElement(fd.gtcNoInput).should("be.visible").clear()
      .type(gNumber);
    cy.clickSomethingElse(fd.gtcNoError)    
      .then(() => {
        const gNoErrorText = "Your GT&C number should be 20 or 22 characters" +
          " (including hyphens and periods) and use the format:" +
          " AYYMM-000-000-000000 AYYMM-000-000-000000.0 (with version number)";
        cy.verifyTextMatches(
          fd.gtcNoError,
          gNoErrorText
        );
      });
    
    //if the Order Number field is blank
    cy.verifyRequiredInput(
      fd.orderNoInput,
      fd.orderNoError,
      "Please enter your order number."); 
    
    const oNumber = "A2216" + randomNumber(3)
    //Enter invalid GNumber
    cy.findElement(fd.orderNoInput).should("be.visible").clear()
      .type(oNumber);      
    cy.clickSomethingElse(fd.orderNoError)
      .then(() => {
        const oNoErrorText = "Your order number should be 20 or 22 characters" +
          " (including hyphens and periods) and use the format:" +
          " OYYMM-000-000-000000 OYYMM-000-000-000000.0 (with version number)";
        cy.verifyTextMatches(
          fd.orderNoError,
          oNoErrorText
        );
      });
    // if no file load
    cy.findElement(fd.fundingfileupload).focus().tab();
    cy.clickSomethingElse(fd.fundingfileuploadError)
      .then(() => {
        cy.checkErrorMessage(
          fd.fundingfileuploadError,
          "You must include an authorized 7600A and 7600B for this acquisition." +
          " Please upload your missing documents,or select" +
          " Back to choose another method for transferring funds."
        );
      });

    //attach invalid files  at the same time
    const filepath = "files/textfile.txt";    
    const file2 = "files/testforfileupload.docx";
    cy.findElement('input[type="file"]').attachFile([file2, filepath]);
    cy.findElement(fd.fundingfileupload).click({ force: true }).then(() => {
      cy.checkErrorMessage(
        fd.fundingfileuploadError,
        "'textfile.txt' is not a valid format or has been corrupted." +
        " Please upload a valid . or .pdf file."
      );
      cy.checkErrorMessage(
        fd.fundingfileuploadError,
        "'testforfileu...oad.docx' is not a valid format or has been corrupted." +
        " Please upload a valid . or .pdf file."
      );
    });      
    
    //attach one valid file
    const validFile = "files/dd1155.pdf";
    cy.findElement('input[type="file"]').attachFile(validFile);
    cy.findElement(fd.fundingfileupload).click({ force: true }).then(() => {
      cy.findElement(fd.uploadFileName0).contains("dd1155.pdf");
      cy.findElement(fd.uploadAlertText).should("be.visible");
      //upload another file
      const validFile1 = "files/Requirements Checklist-DISA.pdf";
      cy.findElement('input[type="file"]').attachFile(validFile1);
      cy.findElement(fd.fundingfileupload).click({ force: true }).then(() => {
        cy.findElement(fd.uploadFileName1).contains("Requirements Checklist-DISA.pdf");
        cy.findElement(fd.uploadAlertText).should("not.be.visible");

      });
      
    });   
  });  
  
  it("TC5: Upload 7600A/B file & Remove Uploaded file", () => {
    cy.selectGInvoiceFRequest(fd.ginvoiceNoRadioBtn, "NO");
    cy.btnClick(common.continueBtn, " Continue ");
    cy.verifyPageHeader(" Let’s gather info about your 7600A and 7600B ");
    const gNumber="A2212-111-110-000000"
    cy.enterTextInTextField(fd.gtcNoInput, gNumber);
    const oNo="O2212-000-000-000000"
    cy.enterTextInTextField(fd.orderNoInput, oNo);
    const filepath = "files/dd1155.pdf"
    cy.findElement('input[type="file"]').attachFile(filepath);
    cy.findElement(fd.fundingfileupload).click({ force: true });
    cy.findElement('#File00').contains("dd1155.pdf");
    cy.findElement(fd.uploadedFile0RemoveBtn).should("exist")
      .and("contain.text", "Remove");
    //click on Remove button
    cy.textExists(fd.uploadedFile0RemoveBtn, "Remove").click().then(() => {
      cy.findElement(fd.uploadedFile0Link).should("not.exist");
      cy.findElement(fd.browserToUploadLink).should("not.be.disabled");
    });
  });

  
});
